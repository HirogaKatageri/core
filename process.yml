# Orb 'circleci/android@1.0.3' resolved to 'circleci/android@1.0.3'
version: 2
jobs:
  build:
    docker:
    - image: circleci/android:api-23
    steps:
    - checkout
    - run:
        command: |
          yes | sdkmanager --licenses
          yes | sdkmanager --update
        description: |
          Accepts all Android SDK licenses. This command is typically not necessary to execute, since the CircleCI machine/convenience images ship with all licenses accepted. This command will add approximately 10 seconds to the build time.
        name: Accept Android Licenses
        shell: /bin/bash -e
    - run:
        name: Run core:assembleRelease
        command: ./gradlew core:assembleRelease
    - save_cache:
        key: android-orb-v1-{{ epoch }}
        name: Save build cache
        paths:
        - ~/.android/build-cache
        - ~/.android/cache
    - save_cache:
        key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
        name: Save gradle cache
        paths:
        - ~/.gradle/caches
        - ~/.gradle/wrapper
  lint:
    docker:
    - image: circleci/android:api-23
    steps:
    - checkout
    - restore_cache:
        key: android-orb-v1-
        name: Restore build cache
    - run:
        command: |
          find . -name 'build.gradle' | sort | xargs cat |
          shasum | awk '{print $1}' > /tmp/gradle_cache_seed
        name: Generate cache checksum
    - restore_cache:
        key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
        name: Restore gradle cache
    - run:
        name: Run core:lint
        command: ./gradlew core:lint
    - store_artifacts:
        path: core/build/reports
        destination: reports/core
    - store_test_results:
        path: core/build/test-results
  unit-test:
    docker:
    - image: circleci/android:api-23
    steps:
    - checkout
    - restore_cache:
        key: android-orb-v1-
        name: Restore build cache
    - run:
        command: |
          find . -name 'build.gradle' | sort | xargs cat |
          shasum | awk '{print $1}' > /tmp/gradle_cache_seed
        name: Generate cache checksum
    - restore_cache:
        key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
        name: Restore gradle cache
    - run:
        name: Run core:testDebugUnitTest
        command: ./gradlew core:testDebugUnitTest
    - store_artifacts:
        path: core/build/reports
        destination: reports/core
    - store_test_results:
        path: core/build/test-results
  publish-maven:
    docker:
    - image: circleci/android:api-23
    steps:
    - checkout
    - restore_cache:
        key: android-orb-v1-
        name: Restore build cache
    - run:
        command: |
          find . -name 'build.gradle' | sort | xargs cat |
          shasum | awk '{print $1}' > /tmp/gradle_cache_seed
        name: Generate cache checksum
    - restore_cache:
        key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
        name: Restore gradle cache
    - run:
        name: Publish Artifacts to Github
        command: ./gradlew publish
workflows:
  version: 2
  branch-test:
    jobs:
    - build:
        filters:
          branches:
            ignore: master
    - lint:
        requires:
        - build
    - unit-test:
        requires:
        - build
  publish-release:
    jobs:
    - build:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /\d.\d.\d/
    - publish-maven:
        requires:
        - build

# Original config.yml file:
# version: 2.1
# 
# orbs:
#   android: circleci/android@1.0.3
# 
# commands:
#   setup-project:
#     steps:
#       - checkout
#       - android/accept-licenses
# 
#   assemble:
#     parameters:
#       to:
#         type: string
#     steps:
#       - run:
#           name: \"Run << parameters.to >>:assembleRelease\"
#           command: ./gradlew << parameters.to >>:assembleRelease
# 
#   lint:
#     parameters:
#       to:
#         type: string
#     steps:
#       - run:
#           name: \"Run << parameters.to >>:lint\"
#           command: ./gradlew << parameters.to >>:lint
#       - store_artifacts:
#           path: << parameters.to >>/build/reports
#           destination: reports/<< parameters.to >>
#       - store_test_results:
#           path: << parameters.to >>/build/test-results
# 
#   unit-test:
#     parameters:
#       to:
#         type: string
#     steps:
#       - run:
#           name: \"Run << parameters.to >>:testDebugUnitTest\"
#           command: ./gradlew << parameters.to >>:testDebugUnitTest
#       - store_artifacts:
#           path: << parameters.to >>/build/reports
#           destination: reports/<< parameters.to >>
#       - store_test_results:
#           path: << parameters.to >>/build/test-results
# 
#   publish-artifacts:
#     steps:
#       - run:
#           name: \"Publish Artifacts to Github\"
#           command: ./gradlew publish
# 
# jobs:
#   build:
#     executor:
#       name: android/android
#       sdk-version: \"23\"
#     steps:
#       - setup-project
#       - assemble:
#           to: \"core\"
#       - android/save-build-cache
#       - android/save-gradle-cache
# 
#   lint:
#     executor:
#       name: android/android
#       sdk-version: \"23\"
#     steps:
#       - checkout
#       - android/restore-build-cache
#       - android/restore-gradle-cache
#       - lint:
#           to: \"core\"
# 
#   unit-test:
#     executor:
#       name: android/android
#       sdk-version: \"23\"
#     steps:
#       - checkout
#       - android/restore-build-cache
#       - android/restore-gradle-cache
#       - unit-test:
#           to: \"core\"
# 
#   publish-maven:
#     executor:
#       name: android/android
#       sdk-version: \"23\"
#     steps:
#       - checkout
#       - android/restore-build-cache
#       - android/restore-gradle-cache
#       - publish-artifacts
# 
# workflows:
#   version: \"1.0.0\"
# 
#   branch-test:
#     jobs:
#       - build:
#           filters:
#             branches:
#               ignore: master
#       - lint:
#           requires:
#             - build
#       - unit-test:
#           requires:
#             - build
# 
#   publish-release:
#     jobs:
#       - build:
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only: /\\d.\\d.\\d/
#       - publish-maven:
#           requires:
#             - build